/* Basic modern styling with light/dark support */
:root {
  --bg: #0b0c10;
  --panel: #12151a;
  --text: #e6edf3;
  --muted: #9aa7b2;
  --brand: #4f8cff;
  --ok: #19c37d;
  --err: #ff5c5c;
  --radius: 14px;
  --shadow: 0 10px 30px rgba(0,0,0,0.25), 0 2px 8px rgba(0,0,0,0.15);
}

@media (prefers-color-scheme: light) {
  :root {
    --bg: #f6f8fa;
    --panel: #ffffff;
    --text: #0f172a;
    --muted: #475569;
    --brand: #2563eb;
    --ok: #059669;
    --err: #dc2626;
    --shadow: 0 10px 30px rgba(2,6,23,0.08), 0 2px 8px rgba(2,6,23,0.06);
  }
}

/* Use a universal border-box model to avoid overflow due to padding/borders */
*, *::before, *::after { box-sizing: border-box; }

html {
  height: 100%;
  overflow-x: hidden; /* prevent horizontal scrollbar from background gradients */
}

body {
  margin: 0;
  min-height: 100dvh; /* ensure background stretches to full viewport height */
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
  background: radial-gradient(1200px 800px at 85% -100px, rgba(79,140,255,0.18), transparent 60%),
              radial-gradient(1000px 700px at -10% 20%, rgba(25,195,125,0.18), transparent 60%),
              var(--bg);
  color: var(--text);
  display: grid;
  place-items: center;
  padding: 24px;
  overflow: hidden; /* disable page scrolling; internal list will scroll instead */
}

/* App container class referenced from Kotlin via Css.appContainer */
.appContainer {
  /* fallback for browsers lacking dynamic viewport units */
  height: calc(100vh - 48px);
  max-height: calc(100vh - 48px);
  min-height: calc(100vh - 48px);
  display: flex; /* enable vertical layout */
  flex-direction: column;
  width: min(100%, 720px);
  margin-inline: auto;
  padding: 22px 24px;
  border-radius: var(--radius);
  background: linear-gradient(180deg, rgba(255,255,255,0.08), rgba(255,255,255,0.02)) var(--panel);
  box-shadow: var(--shadow);
  border: 1px solid rgba(148,163,184,0.18);
  backdrop-filter: saturate(1.2) blur(6px);
  height: calc(100dvh - 48px); /* fill available viewport minus body padding */
  max-height: calc(100dvh - 48px);
  min-height: calc(100dvh - 48px);
}

.appContainer h1 {
  margin: 0 0 14px;
  font-size: 22px;
  flex: 0 0 auto;
}

.todoForm {
  display: flex;
  gap: 10px;
  align-items: center;
  margin: 10px 0 16px;
  flex: 0 0 auto;
}

.textInput {
  flex: 1 1 auto;
  padding: 10px 12px;
  border-radius: 10px;
  color: var(--text);
  background: #0f1216;
  border: 1px solid rgba(148,163,184,0.2);
}
.textInput::placeholder {
  color: var(--muted);
}
.textInput:focus {
  outline: none;
  border-color: color-mix(in lab, var(--brand), #000 10%);
  box-shadow: 0 0 0 3px color-mix(in lab, var(--brand) 25%, transparent);
}

.todoList {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: 8px;
  flex: 1 1 auto; /* take remaining vertical space */
  overflow-y: auto; /* internal scroll */
  overscroll-behavior: contain; /* prevent body scroll chaining on mobile */
  -webkit-overflow-scrolling: touch; /* smooth momentum scroll on iOS */
}

.todoItem {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  padding: 10px 14px 12px;
  border-radius: 12px;
  background: rgba(255,255,255,0.03);
  border: 1px solid rgba(148,163,184,0.12);
  transition: background 140ms ease, border-color 140ms ease;
}
.todoItem:hover {
  background: rgba(255,255,255,0.05);
  border-color: rgba(148,163,184,0.18);
}
.todoItem.expanded {
  background: rgba(255,255,255,0.07);
  border-color: rgba(148,163,184,0.26);
}

.todoSummary {
  display: flex;
  align-items: center;
  gap: 12px;
  cursor: pointer;
  user-select: none;
  min-height: 36px;
}
.todoSummary:focus {
  outline: 2px solid color-mix(in lab, var(--brand) 55%, transparent);
  outline-offset: 2px;
}
/* caret indicator */
.todoSummary::before {
  content: "â€º"; /* restored original glyph */
  display: inline-block;
  font-size: 18px;
  line-height: 1;
  transform: rotate(0deg) translateY(-1px);
  transition: transform 160ms ease;
  opacity: 0.7;
}
.todoItem.expanded .todoSummary::before {
  transform: rotate(90deg) translateY(-1px);
}

.todoTitle {
  flex: 1 1 auto;
  min-width: 0; /* allow shrink */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow-wrap: anywhere; /* break extremely long words if needed */
}
.todoTitle.completed {
  color: var(--muted);
  text-decoration: line-through;
}

.todoActions {
  display: none;
  margin-top: 10px;
  gap: 8px;
  flex-wrap: wrap;
}
.todoItem.expanded .todoActions {
  display: flex;
}

.btn {
  padding: 8px 12px;
  border-radius: 10px;
  border: 1px solid transparent;
  cursor: pointer;
  font: inherit;
  min-height: 44px; /* Better tap target on touch devices */
}
.btnPrimary {
  background: color-mix(in lab, var(--brand) 16%, transparent);
  border-color: color-mix(in lab, var(--brand) 24%, #000 4%);
  color: var(--text);
}
.btnSecondary {
  background: rgba(255,255,255,0.04);
  border-color: rgba(148,163,184,0.2);
  color: var(--text);
}
.btnDanger {
  background: color-mix(in lab, var(--err) 16%, transparent);
  border-color: color-mix(in lab, var(--err) 24%, #000 4%);
  color: var(--text);
}
.btn:hover {
  filter: brightness(1.05);
}
.btn:active {
  transform: translateY(1px);
}

.appContainer::before {
  content: "";
  inline-size: 10px;
  block-size: 10px;
  border-radius: 50%;
  background: var(--ok);
  box-shadow: 0 0 0 4px color-mix(in lab, var(--ok) 25%, transparent);
}

.appContainer .ts {
  color: var(--muted);
  font-variant-numeric: tabular-nums;
  letter-spacing: 0.2px;
}

/* Error modifier referenced from Kotlin via Css.error */
.error {
  border-color: color-mix(in lab, var(--err), #000 10%);
  background: linear-gradient(180deg, rgba(255,92,92,0.08), rgba(255,92,92,0.02)) var(--panel);
}

.error::before {
  background: var(--err);
  box-shadow: 0 0 0 4px color-mix(in lab, var(--err) 25%, transparent);
}

/* Small helper styles if app.js hasn't mounted yet */
#app {
  opacity: 0.95;
}


/*
  Responsive policy (IMPORTANT):
  - Only two responsive variants are supported to keep things simple.
    1) Desktop = default/base styles (typically > 600px).
    2) Mobile  = styles inside the single media query at max-width: 600px.
  - Do NOT add additional breakpoints. If you need tweaks, decide whether they
    belong to Desktop (base) or Mobile (<=600px) and style there accordingly.
*/

@media (max-width: 600px) {
  body {
    padding: 12px;
  }
  .appContainer {
    /* fallback heights */
    height: calc(100vh - 24px);
    max-height: calc(100vh - 24px);
    min-height: calc(100vh - 24px);
    width: 100%;
    padding: 14px 12px;
    height: calc(100dvh - 24px); /* update for smaller body padding */
    max-height: calc(100dvh - 24px);
    min-height: calc(100dvh - 24px);
  }
  .todoForm {
    flex-direction: column;
    align-items: stretch;
    gap: 8px;
  }
  .todoForm .textInput {
    width: 100%;
    font-size: 16px; /* prevent iOS zoom */
  }
  .todoForm .btn {
    width: 100%;
  }
  .todoActions .btn {
    flex: 1 1 auto;
    min-width: calc(50% - 4px);
  }
  .todoTitle {
    white-space: normal; /* allow wrapping on small screens */
  }
  .todoList {
    gap: 10px;
  }
}
